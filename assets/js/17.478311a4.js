(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{308:function(s,t,a){s.exports=a.p+"assets/img/10.1a2f0316.png"},348:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"java面向对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java面向对象"}},[s._v("#")]),s._v(" Java面向对象")]),s._v(" "),t("h4",{attrs:{id:"面向对象编程的本质就是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程的本质就是"}},[s._v("#")]),s._v(" 面向对象编程的本质就是:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("以类的方式组织代码，以对象的的形式组织(封装)数据。")])]),s._v(" "),t("li",[s._v("static方法是与类一同加载的，非静态方法是类实例化后才存在的。")]),s._v(" "),t("li",[s._v("所以静态方法无法调用非静态方法，因为此时不存在。")])]),s._v(" "),t("p",[s._v("类是一个模板，对象是一个具体实例。")]),s._v(" "),t("h4",{attrs:{id:"类与对象的创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类与对象的创建"}},[s._v("#")]),s._v(" 类与对象的创建")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("demo02")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Application")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//类实例化后会返回一个自己的对象")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//xiaoming对象是Student类的一个具体实例")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),s._v(" xiaoming "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//实例化学生类,创建对象xiaoming")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),s._v(" xh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//实例化学生类,创建对象xh")]),s._v("\n        xiaoming"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"小明"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        xiaoming"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        xiaoming"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("study")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        xh"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"小红"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        xh"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        xh"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("study")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n运行结果：\n小明在学习！他的年龄为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n小红在学习！他的年龄为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n")])])]),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("demo02")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//属性：字段")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("study")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"在学习！他的年龄为"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//this指这个类")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h4",{attrs:{id:"构造器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造器"}},[s._v("#")]),s._v(" 构造器")]),s._v(" "),t("p",[s._v("快捷键：alt+insert\n"),t("strong",[s._v("构造器:")]),s._v("\n1.和类名相同\n2.没有返回值\n"),t("strong",[s._v("作用:")])]),s._v(" "),t("ol",[t("li",[s._v("使用new关键字本质在调用构造方法")]),s._v(" "),t("li",[s._v("初始化对象的值")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("demo02")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Application")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//类与对象的创建")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" person "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用无参构造方法")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" person1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hsms"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用有参构造方法")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("person1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n运行结果：\n幻世蛮殇\nhsms\n")])])]),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("demo02")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"幻世蛮殇"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("strong",[s._v("注意点:")]),s._v("\n1.定义有参构造之后，如果想使用无参构造，就一定要显示无参构造方法。\n2.一个类即使什么也不写，也会有构造方法。\n"),t("img",{attrs:{src:a(308),alt:"10"}})]),s._v(" "),t("h4",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("p",[s._v("1.属性:字段FieLd 成员变量\n默认初始化:\n数字:0.0 char : u0000\nbooLean : false 引用: null\n修饰符属性类型属性名=属性值!\n2．对象的创建和使用")]),s._v(" "),t("ul",[t("li",[s._v("必须使用new关键字创造对象，构造器Person kuangshen = new Person()")]),s._v(" "),t("li",[s._v("对象的属性kuangshen. name")]),s._v(" "),t("li",[s._v("对象的方法kuangshen.sleep()")])]),s._v(" "),t("p",[s._v("3.类:\n静态的属性属性 动态的行为方法。")]),s._v(" "),t("h2",{attrs:{id:"面向过程-面向对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向过程-面向对象"}},[s._v("#")]),s._v(" 面向过程&面向对象")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("面向过程思想")]),s._v(" "),t("ul",[t("li",[s._v("步骤清晰简单，第一步做什么，第二步做什么。。。")]),s._v(" "),t("li",[s._v("面对过程适合处理一些较为简单的问题")])])]),s._v(" "),t("li",[t("p",[s._v("面向对象思想")]),s._v(" "),t("ul",[t("li",[s._v("物以类聚，分类的思维模式，思考问题首先会解决问题需要哪些分类，然后对这些分类进行单独思考，最后，才对某个分类下的细节进行面向过程的思索")]),s._v(" "),t("li",[s._v("面向对象适合处理复杂的问题，适合处理需要多人协作的问题")])])]),s._v(" "),t("li",[t("p",[s._v("对于描述复杂的事物，为了从宏观上把握、从整体上合理分析，我们需要使用面向对象的思路来分析整个系统。但是，具体到微观操作，仍然需要面向过程的思路去处理。")])])]),s._v(" "),t("h2",{attrs:{id:"什么是面向对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是面向对象"}},[s._v("#")]),s._v(" 什么是面向对象")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("面向对象编程（Object-Oriented Programming， OOP）")])]),s._v(" "),t("li",[t("p",[s._v("面向对象编程的本质就是：以类的方式组织代码，以对象的组织（封装）数据")])]),s._v(" "),t("li",[t("p",[s._v("抽象")])]),s._v(" "),t("li",[t("p",[s._v("三大特性：")]),s._v(" "),t("ul",[t("li",[s._v("封装")]),s._v(" "),t("li",[s._v("继承")]),s._v(" "),t("li",[s._v("多态")])])]),s._v(" "),t("li",[t("p",[s._v("从认识论角度考虑是先有对象后有类。对象，是具体的事物。类，是抽象的，是对对象的抽象")])]),s._v(" "),t("li",[t("p",[s._v("从代码运行角度考虑是先有类后有对象。类是对象的模板")])])]),s._v(" "),t("h2",{attrs:{id:"类与对象的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类与对象的关系"}},[s._v("#")]),s._v(" 类与对象的关系")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("类是一种抽象的数据类型，它是对某一类事物整体描述/定义，但是并不能代表某一个具体的事物")]),s._v(" "),t("ul",[t("li",[s._v("动物、植物、手机、电脑...")]),s._v(" "),t("li",[s._v("Person类、Pet类、Car类等，这些类都是用来描述/定义某一类具体的事物应该具备的特点和行为")])])]),s._v(" "),t("li",[t("p",[s._v("对象是抽象概念的具体实例")]),s._v(" "),t("ul",[t("li",[s._v("张三就是人的一个具体实例，张三家里的旺财就是狗的一个具体实例")]),s._v(" "),t("li",[s._v("能够体现出特点，展现出功能的是具体的实例，而不是一个抽象的概念")])])])]),s._v(" "),t("h2",{attrs:{id:"创建与初始化对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建与初始化对象"}},[s._v("#")]),s._v(" 创建与初始化对象")]),s._v(" "),t("ul",[t("li",[s._v("使用new关键字创建对象")]),s._v(" "),t("li",[s._v("使用new关键字创建的时候，除了分配内存空间之外，还会给创建好的对象进项默认的初始化以及对类中构造器的调用")]),s._v(" "),t("li",[s._v("类中的构造器也称为构造方法，是在进行创建对象的时候必须要调用的，并且构造器有一下两个特点\n"),t("ul",[t("li",[s._v("1、必须和类的名字相同")]),s._v(" "),t("li",[s._v("2、必须没有返回类型，也不能写void")])])])]),s._v(" "),t("h2",{attrs:{id:"封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[s._v("#")]),s._v(" 封装")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("该露的露，该藏的藏")]),s._v(" "),t("ul",[t("li",[s._v("我们程序设计要追求“高内聚，低耦合”，高内聚就是类的内部数据操作细节自己完成，不允许外部干涉；低耦合就是暴露少量方法给外部使用")])])]),s._v(" "),t("li",[t("p",[s._v("封装（数据的隐藏）")]),s._v(" "),t("ul",[t("li",[s._v("通常，应禁止直接访问一个对象中数据的实际表示，而应通过操作接口来访问，这称为信息隐藏")])])]),s._v(" "),t("li",[t("p",[s._v("属性私有：get/set")])]),s._v(" "),t("li",[t("p",[s._v("优点")]),s._v(" "),t("ol",[t("li",[s._v("提高程序的安全性，保护数据")]),s._v(" "),t("li",[s._v("隐藏代码的实现细节")]),s._v(" "),t("li",[s._v("统一接口")]),s._v(" "),t("li",[s._v("增加系统的可维护性")])])])]),s._v(" "),t("h2",{attrs:{id:"继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[s._v("#")]),s._v(" 继承")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("继承的本质是对某一批类的抽象，从而实现对现实世界更好的建模")])]),s._v(" "),t("li",[t("p",[s._v("extends的意思是“扩展”，子类是父类的扩展")])]),s._v(" "),t("li",[t("p",[s._v("Java中类只有单继承，没有多继承")])]),s._v(" "),t("li",[t("p",[s._v("继承是类和类之间的一种关系，除此之外，类和类之前的关系还有依赖、组合、聚合等")])]),s._v(" "),t("li",[t("p",[s._v("继承关系的两个类，一个为子类（派生类），一个为父类（基类），子类继承父类，使用关键字extends来表示")])]),s._v(" "),t("li",[t("p",[s._v("子类和父类之间，从意义上讲应该具有“is a”的关系")])]),s._v(" "),t("li",[t("p",[s._v("object类")])]),s._v(" "),t("li",[t("p",[s._v("super")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("注意点")]),s._v(" "),t("ol",[t("li",[s._v("super调用父类的构造方法，必须在构造方法的第一个")]),s._v(" "),t("li",[s._v("super必须只能出现在子类的方法或构造方法中")]),s._v(" "),t("li",[s._v("super和this不能同时调用构造方法")])])]),s._v(" "),t("li",[t("p",[s._v("super和this的区别")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("代表的对象不同")]),s._v(" "),t("ul",[t("li",[s._v("this：本身调用者这个对象")]),s._v(" "),t("li",[s._v("super：代表父类对象的引用")])])]),s._v(" "),t("li",[t("p",[s._v("前提")]),s._v(" "),t("ul",[t("li",[s._v("没有继承也可以使用")]),s._v(" "),t("li",[s._v("只能在继承条件下才可以使用")])])]),s._v(" "),t("li",[t("p",[s._v("构造方法")]),s._v(" "),t("ul",[t("li",[s._v("this()：本类的构造")]),s._v(" "),t("li",[s._v("super()：父类的构造")])])])])])])]),s._v(" "),t("li",[t("p",[s._v("方法重写：需要有继承关系，子类重写父类的方法")]),s._v(" "),t("ol",[t("li",[s._v("方法名必须相同")]),s._v(" "),t("li",[s._v("参数列表必须相同")]),s._v(" "),t("li",[s._v("修饰符：范围可以扩大，不能缩小  public>protected>default>private")]),s._v(" "),t("li",[s._v("抛出的异常：范围可以被缩小，不能扩大")]),s._v(" "),t("li",[s._v("子类的方法和父类必须要一致，方法体不同")])])]),s._v(" "),t("li",[t("p",[s._v("为什么要重写")]),s._v(" "),t("ul",[t("li",[s._v("父类的功能，子类不一定需要，或者不一定满足")])])])]),s._v(" "),t("h2",{attrs:{id:"多态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多态"}},[s._v("#")]),s._v(" 多态")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("即同一方法可以根据发送对象的不同而采用多种不同的行为方式")])]),s._v(" "),t("li",[t("p",[s._v("一个对象的实际类型是确定的，但可以指向对象的引用的类型有很多")])]),s._v(" "),t("li",[t("p",[s._v("多态存在的条件")]),s._v(" "),t("ul",[t("li",[s._v("有继承关系")]),s._v(" "),t("li",[s._v("子类重写父类方法")]),s._v(" "),t("li",[s._v("父类引用指向子类对象")])])]),s._v(" "),t("li",[t("p",[s._v("注意：多态是方法的多态，属性没有多态性")])]),s._v(" "),t("li",[t("p",[s._v("instanceof")])])]),s._v(" "),t("h2",{attrs:{id:"抽象类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#抽象类"}},[s._v("#")]),s._v(" 抽象类")]),s._v(" "),t("ul",[t("li",[s._v("abstract修饰符可以用来修饰方法也可以修饰类，如果修饰方法，那么该方法就是抽象方法；如果修饰类，那么该类就是抽象类")]),s._v(" "),t("li",[s._v("抽象类中可以没有抽象方法，但是有抽象方法的类一定要声明为抽象类")]),s._v(" "),t("li",[s._v("抽象类，不能使用new关键字来创建对象，它是用来让子类继承的")]),s._v(" "),t("li",[s._v("抽象方法，只有方法的声明，没有方法的实现，它是用来让子类实现的")]),s._v(" "),t("li",[s._v("子类继承抽象类，那么就必须要实现抽象类没有实现的抽象方法，否则该子类也要声明为抽象类")])]),s._v(" "),t("h2",{attrs:{id:"接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[s._v("#")]),s._v(" 接口")]),s._v(" "),t("ul",[t("li",[s._v("普通类：只有具体实现")]),s._v(" "),t("li",[s._v("抽象类：具体实现和规范（抽象方法）都有")]),s._v(" "),t("li",[s._v("接口：只有规范，自己无法写方法")]),s._v(" "),t("li",[s._v("接口就是规范，定义的是一组规则，体现了现实世界中“如果你是...则必须能...”的思想。如果你是天使，则必须能飞。如果你是汽车，则必须能跑")]),s._v(" "),t("li",[s._v("接口的本质是契约，就像我们人间的法律一样。制定后大家都遵守")]),s._v(" "),t("li",[s._v("OO的精髓，是对对象的抽象，最能体现这一点的就是接口。")]),s._v(" "),t("li",[s._v("声明类的关键字是class，声明接口的关键字是interface")])]),s._v(" "),t("h2",{attrs:{id:"内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部类"}},[s._v("#")]),s._v(" 内部类")]),s._v(" "),t("ul",[t("li",[s._v("内部类就是在一个类的内部再定义一个类，比如，A类中定义一个B类，那么B类相对A类来说就称为内部类，而A类相对B类来说就是外部类了")]),s._v(" "),t("li",[s._v("成员内部类")]),s._v(" "),t("li",[s._v("静态内部类")]),s._v(" "),t("li",[s._v("局部内部类")]),s._v(" "),t("li",[s._v("匿名内部类")])])])}),[],!1,null,null,null);t.default=e.exports}}]);